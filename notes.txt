
// app.get('/',(req,res)=> {
// //JSON 
// //res.json({key: 007});
// //HTML
// //res.send('<h4>Gday</h4>');
// //headers(localhost:3000)
// //res.send(req.get('Host'));
// //rawHeaders property
// res.send(req.rawHeaders);
// });

/**CONDITIONAL SENDING */
// app.post('/login',(req,res)=> {
// if(!req.header('x-auth-token')){
// return res.status(400).send('No token found');
// }
// if(req.header('x-auth-token')!== '123456'){
//     return res.status(401).send('Authorzation failed')
// }
// res.send('Logged in succesffully');
// });

 //  const obj = {
    //      name: req.body.name,
    //      username: req.body.username
    //  }
    //  res.json(obj);
    //  res.end();

    app.post('/login', (req, res) => {
    const user = {
        id: 1,
        name: 'Tommy',
        email: 'MAGES06@gmail.com'
    }
    jwt.sign({
        user
    }, 'secretKey', (err, token) => {
        res.json({
            token
        });
    })
});

//VerifyToken
function verifyToken(req, res, next) {
    //getauth header value
    const bearerHeader = req.headers['authorization'];
    //check if undefined
    if (typeof bearerHeader !== undefined) {

    } else {
        //forbiddeÅ›
        res.status(403);
    }
}

/ validateForm = () => {
//   const { nameValid, emailValid, occupationValid, ageValid } = this.state;
//   this.setState({
//     formValid: nameValid && emailValid && occupationValid && ageValid
//   });
// };

// const p = [...this.state.people];
// const pi = this.state.fields;
// const fieldErrors = this.validateFields(pi);
// this.setState({ fieldErrors });
// if (Object.keys(fieldErrors).length) return;
// this.setState({
//   p: p.concat(pi),
//   fields: {
//     name: ""
//   }
// });
//  console.log(pi);

// const h1Styles = {
//   fontStyle: "tahoma"
// };

// import { ThemeProvider } from "@material-ui/core/styles";
// import AppBar from "@material-ui/core/AppBar";
// import TextField from "@material-ui/core/TextField";
// import RadioButton from "@material-ui/core/RadioButton";

/* <TextField
            hinttext="Enter your email"
            floatingLabelText="email"
            onChange={onChange("email")}
            defaultValue={value.email}
          />
          <br />
          <RadioButton
            label="Continue"
            primary={true}
            style={styles.button}
            onClick={this.continue}
          /> */

//   <div>
//     <div className="firstName">
//       <label htmlFor="firstName">First Name</label>
//       <input
//         className={value.fieldErrors.firstName.length > 0 ? "error" : null}
//         type="text"
//         name="firstName"
//         placeholder="First Name"
//         onChange={onChange}
//         noValidate
//       />

//       {value.fieldErrors.firstName.length > 0 && (
//         <span className="errorMessage">{value.fieldErrors.firstName}</span>
//       )}
//     </div>
//     <hr />
//     <div className="lastName">
//       <label htmlFor="lastName">Last Name</label>
//
//     </div>
//     <hr />
//     <div className="email">
//       <label htmlFor="email">Email</label>
//
//     </div>
//     <hr />
//     <input type="submit" />
//   </div>
// </>

    // return (
    //   <>
    //     <div className="wrapper">
    //       <div className="form-wrapper">
    //         <h1>React Form</h1>
    //         <form onSubmit={this.onFormSubmit} noValidate>
    //           <Field />
    //         </form>
    //         <hr />
    //       </div>
    //     </div>
    //   </>
    // );



// componentDidMount() {
//   this.callBackendAPI()
//     .then(res =>
//       this.setState({ data: res.express, customers: customers.firstname })
//     )
//     .catch(err => console.log(err));
// }
// callBackendAPI = async () => {
//   const response = await fetch("/backend");
//   const body = await response.json();

//   if (response.status !== 200) {
//     throw Error(body.message);
//   }
//   return body;
// };


